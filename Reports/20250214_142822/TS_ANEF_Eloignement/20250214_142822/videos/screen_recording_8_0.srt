1
00:00:00,004 --> 00:00:00,127
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,135 --> 00:00:00,135
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,138 --> 00:00:00,139
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,140 --> 00:00:00,142
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,144 --> 00:00:00,145
19. println("DriverName :" + DriverName)

6
00:00:00,147 --> 00:00:00,147
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,149 --> 00:00:00,150
27. if (Profiles == "Usager")

8
00:00:00,151 --> 00:00:00,151
31. if (Profiles == "Agent")

9
00:00:00,153 --> 00:00:00,153
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,154 --> 00:00:00,155
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,156 --> 00:00:04,567
1. openBrowser(URLPortailAgentPreProd)

12
00:00:04,568 --> 00:00:04,641
9. maximizeWindow()

13
00:00:04,643 --> 00:00:04,760
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:04,762 --> 00:00:04,767
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:04,769 --> 00:00:04,770
5. if (Profiles == "Usager")

16
00:00:04,773 --> 00:00:04,774
11. Identification : Portail Agent

17
00:00:04,776 --> 00:00:04,777
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:04,779 --> 00:00:04,780
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:04,782 --> 00:00:07,108
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:07,110 --> 00:00:09,357
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:09,360 --> 00:00:10,549
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:10,551 --> 00:00:15,562
15. delay(5)

23
00:00:15,564 --> 00:00:15,595
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:15,598 --> 00:00:15,683
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:15,685 --> 00:00:19,080
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:19,085 --> 00:00:19,118
9. Vérifier la position de la page d'accueil eloignement

27
00:00:19,120 --> 00:00:24,137
13. delay(5)

28
00:00:24,140 --> 00:00:25,354
19. Cliquer sur le bouton Recherche Globale

29
00:00:25,355 --> 00:00:25,357
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:25,360 --> 00:00:25,362
29. if (CreationOuRecherche == "Recherche")

31
00:00:25,364 --> 00:00:27,717
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:27,719 --> 00:00:28,902
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:28,907 --> 00:00:28,956
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:28,961 --> 00:00:30,160
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:30,162 --> 00:00:35,174
17. delay(5)

36
00:00:35,177 --> 00:00:35,216
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:35,219 --> 00:00:36,404
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:36,408 --> 00:00:37,881
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:37,882 --> 00:00:37,883
19. if (CreationOuRecherche == "Creation")

40
00:00:37,886 --> 00:00:37,887
23. println(NumeroEtranger)

41
00:00:37,888 --> 00:00:37,971
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:37,972 --> 00:00:39,851
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:39,855 --> 00:00:44,871
5. delay(5)

44
00:00:44,872 --> 00:00:44,874
9. switch (Mesure)

45
00:00:44,875 --> 00:00:46,072
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:46,075 --> 00:00:47,268
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:47,270 --> 00:00:47,948
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:47,951 --> 00:00:47,952
18. break

49
00:00:47,957 --> 00:00:48,087
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:48,088 --> 00:00:48,088
3. Generer la date du jour

51
00:00:48,090 --> 00:00:48,090
7. currentDate = calendar.getTime()

52
00:00:48,092 --> 00:00:48,093
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:48,095 --> 00:00:48,095
15. formattedDate = sdf.format(currentDate)

54
00:00:48,097 --> 00:00:48,097
19. DateActuelle = formattedDate.toString()

55
00:00:48,099 --> 00:00:48,100
23. println(DateActuelle)

56
00:00:48,102 --> 00:00:48,102
27. if (Mesure != "ITF")

57
00:00:48,104 --> 00:00:49,273
3. Remplir le champ Fondement Legal

58
00:00:49,276 --> 00:00:49,277
7. if (Mesure == "Expulsion")

59
00:00:49,279 --> 00:00:49,283
13. Generer un numero aleatoire

60
00:00:49,287 --> 00:00:49,288
17. println(NumberUsagerRandom)

61
00:00:49,290 --> 00:00:49,291
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:49,293 --> 00:00:49,294
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:49,297 --> 00:00:49,298
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:49,299 --> 00:00:49,300
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:49,302 --> 00:00:49,303
43. println(RandomNumber)

66
00:00:49,306 --> 00:00:49,306
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:49,309 --> 00:00:49,310
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:49,312 --> 00:00:49,313
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:49,315 --> 00:00:50,547
3. Ajouter un document 

70
00:00:50,549 --> 00:00:51,770
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:51,772 --> 00:00:51,775
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:51,777 --> 00:00:51,780
15. println(filePath)

73
00:00:51,782 --> 00:00:52,883
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:52,885 --> 00:00:54,076
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:54,079 --> 00:00:54,080
61. if (Mesure == "IAT")

76
00:00:54,083 --> 00:00:54,083
31. if (Mesure == "ITF")

77
00:00:54,084 --> 00:00:55,238
37. Enregistrer les modifications

78
00:00:55,240 --> 00:00:55,331
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:55,333 --> 00:00:55,333
1. calendar = Calendar.getInstance()

80
00:00:55,335 --> 00:00:55,335
5. currentDate = calendar.getTime()

81
00:00:55,337 --> 00:00:55,337
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:55,339 --> 00:00:55,340
13. formattedDate = sdf.format(currentDate)

83
00:00:55,343 --> 00:00:55,343
17. DateActuelle = formattedDate.toString()

84
00:00:55,345 --> 00:00:55,345
21. println(DateActuelle)

85
00:00:55,347 --> 00:00:55,400
27. Attendre que le bouton soit cliquable

86
00:00:55,401 --> 00:00:56,754
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:56,756 --> 00:00:56,821
39. Confirmer l'Ajout de decision

88
00:00:56,822 --> 00:00:58,027
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:58,029 --> 00:00:59,151
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:00:59,153 --> 00:01:00,356
55. Confirmer Notification

91
00:01:00,360 --> 00:01:01,567
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:01,569 --> 00:01:03,881
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:03,884 --> 00:01:03,884
67. if (ModeNotification == "Voie administrative")

94
00:01:03,889 --> 00:01:06,169
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:06,171 --> 00:01:07,269
73. Ajouter un fichier 

96
00:01:07,271 --> 00:01:07,317
79. Confirmer l'ajout de Notification

97
00:01:07,319 --> 00:01:08,549
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:08,551 --> 00:01:08,629
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

