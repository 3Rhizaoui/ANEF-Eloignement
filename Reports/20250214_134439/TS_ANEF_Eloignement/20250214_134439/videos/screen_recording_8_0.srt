1
00:00:00,003 --> 00:00:00,153
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,159 --> 00:00:00,159
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,161 --> 00:00:00,162
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,164 --> 00:00:00,164
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,165 --> 00:00:00,166
19. println("DriverName :" + DriverName)

6
00:00:00,167 --> 00:00:00,168
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,170 --> 00:00:00,171
27. if (Profiles == "Usager")

8
00:00:00,174 --> 00:00:00,174
31. if (Profiles == "Agent")

9
00:00:00,176 --> 00:00:00,177
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,179 --> 00:00:00,179
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,181 --> 00:00:04,545
1. openBrowser(URLPortailAgentPreProd)

12
00:00:04,547 --> 00:00:04,572
9. maximizeWindow()

13
00:00:04,574 --> 00:00:04,676
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:04,677 --> 00:00:04,679
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:04,681 --> 00:00:04,681
5. if (Profiles == "Usager")

16
00:00:04,683 --> 00:00:04,684
11. Identification : Portail Agent

17
00:00:04,686 --> 00:00:04,687
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:04,689 --> 00:00:04,689
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:04,690 --> 00:00:07,079
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:07,082 --> 00:00:09,355
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:09,357 --> 00:00:10,514
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:10,516 --> 00:00:15,520
15. delay(5)

23
00:00:15,521 --> 00:00:15,548
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:15,550 --> 00:00:15,642
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:15,644 --> 00:00:19,992
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:19,994 --> 00:00:20,029
9. Vérifier la position de la page d'accueil eloignement

27
00:00:20,032 --> 00:00:25,038
13. delay(5)

28
00:00:25,040 --> 00:00:26,236
19. Cliquer sur le bouton Recherche Globale

29
00:00:26,239 --> 00:00:26,240
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:26,242 --> 00:00:26,243
29. if (CreationOuRecherche == "Recherche")

31
00:00:26,245 --> 00:00:28,614
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:28,617 --> 00:00:29,787
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:29,790 --> 00:00:29,844
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:29,846 --> 00:00:31,047
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:31,049 --> 00:00:36,068
17. delay(5)

36
00:00:36,070 --> 00:00:36,113
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:36,116 --> 00:00:37,301
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:37,306 --> 00:00:38,726
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:38,727 --> 00:00:38,728
19. if (CreationOuRecherche == "Creation")

40
00:00:38,730 --> 00:00:38,731
23. println(NumeroEtranger)

41
00:00:38,733 --> 00:00:38,819
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:38,820 --> 00:00:40,449
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:40,451 --> 00:00:45,457
5. delay(5)

44
00:00:45,459 --> 00:00:45,460
9. switch (Mesure)

45
00:00:45,462 --> 00:00:46,648
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:46,653 --> 00:00:47,857
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:47,859 --> 00:00:48,552
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:48,555 --> 00:00:48,558
18. break

49
00:00:48,560 --> 00:00:48,692
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:48,694 --> 00:00:48,694
3. Generer la date du jour

51
00:00:48,696 --> 00:00:48,696
7. currentDate = calendar.getTime()

52
00:00:48,698 --> 00:00:48,698
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:48,700 --> 00:00:48,701
15. formattedDate = sdf.format(currentDate)

54
00:00:48,703 --> 00:00:48,704
19. DateActuelle = formattedDate.toString()

55
00:00:48,707 --> 00:00:48,708
23. println(DateActuelle)

56
00:00:48,709 --> 00:00:48,710
27. if (Mesure != "ITF")

57
00:00:48,712 --> 00:00:49,861
3. Remplir le champ Fondement Legal

58
00:00:49,863 --> 00:00:49,863
7. if (Mesure == "Expulsion")

59
00:00:49,865 --> 00:00:49,869
13. Generer un numero aleatoire

60
00:00:49,871 --> 00:00:49,872
17. println(NumberUsagerRandom)

61
00:00:49,875 --> 00:00:49,875
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:49,876 --> 00:00:49,877
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:49,878 --> 00:00:49,878
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:49,879 --> 00:00:49,879
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:49,880 --> 00:00:49,881
43. println(RandomNumber)

66
00:00:49,882 --> 00:00:49,882
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:49,883 --> 00:00:49,884
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:49,884 --> 00:00:49,885
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:49,886 --> 00:00:51,098
3. Ajouter un document 

70
00:00:51,100 --> 00:00:52,305
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:52,308 --> 00:00:52,309
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:52,311 --> 00:00:52,312
15. println(filePath)

73
00:00:52,314 --> 00:00:53,419
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:53,422 --> 00:00:54,621
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:54,625 --> 00:00:54,626
61. if (Mesure == "IAT")

76
00:00:54,629 --> 00:00:54,629
31. if (Mesure == "ITF")

77
00:00:54,632 --> 00:00:55,803
37. Enregistrer les modifications

78
00:00:55,805 --> 00:00:55,898
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:55,900 --> 00:00:55,901
1. calendar = Calendar.getInstance()

80
00:00:55,902 --> 00:00:55,903
5. currentDate = calendar.getTime()

81
00:00:55,905 --> 00:00:55,905
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:55,906 --> 00:00:55,907
13. formattedDate = sdf.format(currentDate)

83
00:00:55,908 --> 00:00:55,909
17. DateActuelle = formattedDate.toString()

84
00:00:55,910 --> 00:00:55,911
21. println(DateActuelle)

85
00:00:55,913 --> 00:00:55,964
27. Attendre que le bouton soit cliquable

86
00:00:55,967 --> 00:00:57,321
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:57,323 --> 00:00:57,390
39. Confirmer l'Ajout de decision

88
00:00:57,392 --> 00:00:58,586
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:58,588 --> 00:00:59,722
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:00:59,725 --> 00:01:00,937
55. Confirmer Notification

91
00:01:00,941 --> 00:01:02,147
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:02,149 --> 00:01:04,462
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:04,464 --> 00:01:04,467
67. if (ModeNotification == "Voie administrative")

94
00:01:04,471 --> 00:01:06,775
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:06,777 --> 00:01:07,854
73. Ajouter un fichier 

96
00:01:07,855 --> 00:01:07,897
79. Confirmer l'ajout de Notification

97
00:01:07,899 --> 00:01:09,023
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:09,025 --> 00:01:09,091
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

