1
00:00:00,003 --> 00:00:00,132
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,136 --> 00:00:00,137
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,138 --> 00:00:00,139
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,140 --> 00:00:00,141
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,142 --> 00:00:00,142
19. println("DriverName :" + DriverName)

6
00:00:00,143 --> 00:00:00,144
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,146 --> 00:00:00,146
27. if (Profiles == "Usager")

8
00:00:00,147 --> 00:00:00,148
31. if (Profiles == "Agent")

9
00:00:00,149 --> 00:00:00,149
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,150 --> 00:00:00,151
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,152 --> 00:00:05,998
1. openBrowser(URLPortailAgentPreProd)

12
00:00:06,001 --> 00:00:06,016
9. maximizeWindow()

13
00:00:06,017 --> 00:00:06,139
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:06,141 --> 00:00:06,148
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:06,153 --> 00:00:06,155
5. if (Profiles == "Usager")

16
00:00:06,158 --> 00:00:06,158
11. Identification : Portail Agent

17
00:00:06,161 --> 00:00:06,162
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:06,164 --> 00:00:06,165
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:06,167 --> 00:00:08,500
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:08,503 --> 00:00:10,752
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:10,754 --> 00:00:11,890
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:11,892 --> 00:00:16,910
15. delay(5)

23
00:00:16,912 --> 00:00:16,945
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:16,946 --> 00:00:17,032
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:17,034 --> 00:00:20,138
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:20,140 --> 00:00:20,192
9. Vérifier la position de la page d'accueil eloignement

27
00:00:20,194 --> 00:00:25,213
13. delay(5)

28
00:00:25,214 --> 00:00:26,387
19. Cliquer sur le bouton Recherche Globale

29
00:00:26,389 --> 00:00:26,390
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:26,392 --> 00:00:26,392
29. if (CreationOuRecherche == "Recherche")

31
00:00:26,394 --> 00:00:28,704
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:28,706 --> 00:00:29,853
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:29,857 --> 00:00:29,900
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:29,904 --> 00:00:31,054
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:31,057 --> 00:00:36,067
17. delay(5)

36
00:00:36,069 --> 00:00:36,112
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:36,114 --> 00:00:37,254
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:37,257 --> 00:00:38,781
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:38,784 --> 00:00:38,785
19. if (CreationOuRecherche == "Creation")

40
00:00:38,787 --> 00:00:38,787
23. println(NumeroEtranger)

41
00:00:38,790 --> 00:00:38,896
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:38,900 --> 00:00:41,027
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:41,030 --> 00:00:46,048
5. delay(5)

44
00:00:46,050 --> 00:00:46,051
9. switch (Mesure)

45
00:00:46,053 --> 00:00:47,218
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:47,221 --> 00:00:48,378
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:48,380 --> 00:00:49,439
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:49,442 --> 00:00:49,444
18. break

49
00:00:49,446 --> 00:00:49,684
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:49,687 --> 00:00:49,688
3. Generer la date du jour

51
00:00:49,691 --> 00:00:49,692
7. currentDate = calendar.getTime()

52
00:00:49,694 --> 00:00:49,696
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:49,698 --> 00:00:49,699
15. formattedDate = sdf.format(currentDate)

54
00:00:49,702 --> 00:00:49,703
19. DateActuelle = formattedDate.toString()

55
00:00:49,708 --> 00:00:49,709
23. println(DateActuelle)

56
00:00:49,712 --> 00:00:49,714
27. if (Mesure != "ITF")

57
00:00:49,717 --> 00:00:51,012
3. Remplir le champ Fondement Legal

58
00:00:51,016 --> 00:00:51,017
7. if (Mesure == "Expulsion")

59
00:00:51,019 --> 00:00:51,022
13. Generer un numero aleatoire

60
00:00:51,026 --> 00:00:51,027
17. println(NumberUsagerRandom)

61
00:00:51,029 --> 00:00:51,029
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:51,032 --> 00:00:51,033
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:51,035 --> 00:00:51,036
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:51,038 --> 00:00:51,039
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:51,041 --> 00:00:51,042
43. println(RandomNumber)

66
00:00:51,044 --> 00:00:51,045
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:51,046 --> 00:00:51,047
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:51,049 --> 00:00:51,049
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:51,051 --> 00:00:52,338
3. Ajouter un document 

70
00:00:52,341 --> 00:00:53,551
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:53,554 --> 00:00:53,556
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:53,558 --> 00:00:53,561
15. println(filePath)

73
00:00:53,565 --> 00:00:54,656
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:54,659 --> 00:00:55,807
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:55,810 --> 00:00:55,811
61. if (Mesure == "IAT")

76
00:00:55,812 --> 00:00:55,813
31. if (Mesure == "ITF")

77
00:00:55,815 --> 00:00:56,947
37. Enregistrer les modifications

78
00:00:56,949 --> 00:00:57,029
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:57,032 --> 00:00:57,032
1. calendar = Calendar.getInstance()

80
00:00:57,034 --> 00:00:57,035
5. currentDate = calendar.getTime()

81
00:00:57,037 --> 00:00:57,037
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:57,039 --> 00:00:57,039
13. formattedDate = sdf.format(currentDate)

83
00:00:57,040 --> 00:00:57,041
17. DateActuelle = formattedDate.toString()

84
00:00:57,042 --> 00:00:57,044
21. println(DateActuelle)

85
00:00:57,047 --> 00:00:57,120
27. Attendre que le bouton soit cliquable

86
00:00:57,123 --> 00:00:58,589
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:58,592 --> 00:00:58,665
39. Confirmer l'Ajout de decision

88
00:00:58,668 --> 00:00:59,884
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:59,887 --> 00:01:00,978
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:01:00,981 --> 00:01:02,163
55. Confirmer Notification

91
00:01:02,166 --> 00:01:03,419
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:03,422 --> 00:01:05,755
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:05,757 --> 00:01:05,758
67. if (ModeNotification == "Voie administrative")

94
00:01:05,763 --> 00:01:08,382
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:08,384 --> 00:01:09,474
73. Ajouter un fichier 

96
00:01:09,477 --> 00:01:09,524
79. Confirmer l'ajout de Notification

97
00:01:09,526 --> 00:01:10,743
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:10,747 --> 00:01:10,800
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

