1
00:00:01,226 --> 00:00:02,589
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:02,615 --> 00:00:02,622
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:02,626 --> 00:00:02,632
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:02,635 --> 00:00:02,673
15. DriverName = get("WebUI").get("browserType")

5
00:00:02,677 --> 00:00:02,694
19. println("DriverName :" + DriverName)

6
00:00:02,698 --> 00:00:02,703
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:02,708 --> 00:00:02,713
27. if (Profiles == "Usager")

8
00:00:02,716 --> 00:00:02,720
31. if (Profiles == "Agent")

9
00:00:02,723 --> 00:00:02,729
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:02,732 --> 00:00:02,736
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:02,739 --> 00:00:09,288
1. openBrowser(URLPortailAgentPreProd)

12
00:00:09,291 --> 00:00:09,465
9. maximizeWindow()

13
00:00:09,468 --> 00:00:10,359
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:10,362 --> 00:00:10,812
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:10,815 --> 00:00:10,823
5. if (Profiles == "Usager")

16
00:00:10,829 --> 00:00:10,836
11. Identification : Portail Agent

17
00:00:10,840 --> 00:00:10,846
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:10,850 --> 00:00:10,857
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:10,859 --> 00:00:13,619
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:13,622 --> 00:00:15,871
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:15,874 --> 00:00:17,152
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:17,156 --> 00:00:22,208
15. delay(5)

23
00:00:22,210 --> 00:00:22,271
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:22,273 --> 00:00:22,666
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:22,670 --> 00:00:25,493
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:25,496 --> 00:00:25,539
9. Vérifier la position de la page d'accueil eloignement

27
00:00:25,542 --> 00:00:30,563
13. delay(5)

28
00:00:30,567 --> 00:00:31,724
19. Cliquer sur le bouton Recherche Globale

29
00:00:31,726 --> 00:00:31,729
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:31,732 --> 00:00:31,735
29. if (CreationOuRecherche == "Recherche")

31
00:00:31,736 --> 00:00:34,010
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:34,016 --> 00:00:35,157
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:35,159 --> 00:00:35,224
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:35,226 --> 00:00:36,392
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:36,394 --> 00:00:41,412
17. delay(5)

36
00:00:41,413 --> 00:00:41,468
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:41,471 --> 00:00:42,608
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:42,610 --> 00:00:44,020
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:44,024 --> 00:00:44,028
19. if (CreationOuRecherche == "Creation")

40
00:00:44,033 --> 00:00:44,039
23. println(NumeroEtranger)

41
00:00:44,044 --> 00:00:45,049
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:45,054 --> 00:00:46,758
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:46,764 --> 00:00:46,775
5. switch (Mesure)

44
00:00:46,779 --> 00:00:46,845
4.  Prendre Une Mesure Expulsion  

45
00:00:46,849 --> 00:00:48,075
8. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/select_Type_Mesure"), "Expulsion", false, STOP_ON_FAILURE)

46
00:00:48,077 --> 00:00:49,217
14. Cliquer sur le bourron Confirmer Mesure

47
00:00:49,220 --> 00:00:49,865
18. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:49,867 --> 00:00:49,869
22. break

49
00:00:49,872 --> 00:00:51,609
9. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:51,612 --> 00:00:51,631
3. Generer la date du jour

51
00:00:51,635 --> 00:00:51,655
7. currentDate = calendar.getTime()

52
00:00:51,659 --> 00:00:51,703
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:51,707 --> 00:00:51,711
15. formattedDate = sdf.format(currentDate)

54
00:00:51,720 --> 00:00:51,727
19. DateActuelle = formattedDate.toString()

55
00:00:51,730 --> 00:00:51,734
23. println(DateActuelle)

56
00:00:51,738 --> 00:00:51,743
27. if (Mesure != "ITF")

57
00:00:51,745 --> 00:00:52,920
3. Remplir le champ Fondement Legal

58
00:00:52,921 --> 00:00:52,924
7. if (Mesure == "Expulsion")

59
00:00:52,926 --> 00:00:52,928
1. if (NatureDeLacteExpulsion == "AME")

60
00:00:52,930 --> 00:00:52,937
5. if (NatureDeLacteExpulsion == "APE")

61
00:00:52,939 --> 00:00:52,943
9. if (UrgenceAbsolueExpulsion == "Non")

62
00:00:52,946 --> 00:00:52,949
13. if (UrgenceAbsolueExpulsion == "Oui")

63
00:00:52,951 --> 00:00:54,115
3. Choisir une Urgence Absolue == Oui 

64
00:00:54,119 --> 00:00:59,138
7. delay(5)

65
00:00:59,140 --> 00:00:59,195
13. Vérifier que les champs de l'accordeon : Décision fixant le pays de renvoi sont activés 

66
00:00:59,197 --> 00:00:59,246
17. verifyElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Auteur_Decision"))

67
00:00:59,248 --> 00:00:59,343
13. Generer un numero aleatoire

68
00:00:59,344 --> 00:00:59,350
17. println(NumberUsagerRandom)

69
00:00:59,354 --> 00:00:59,359
21. RandomNumber = NumberUsagerRandom.toString()

70
00:00:59,362 --> 00:00:59,366
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

71
00:00:59,369 --> 00:00:59,373
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

72
00:00:59,375 --> 00:00:59,380
39. generer un nombre aleatoire entre '1' et '30'

73
00:00:59,385 --> 00:00:59,389
43. println(RandomNumber)

74
00:00:59,394 --> 00:00:59,398
47. RandomNumberSelect = RandomNumber.toString()

75
00:00:59,402 --> 00:00:59,405
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

76
00:00:59,408 --> 00:00:59,411
57. if (Mesure == "ExecutionFicheSIS")

77
00:00:59,414 --> 00:00:59,417
61. if (Mesure == "IAT")

78
00:00:59,421 --> 00:00:59,422
31. if (Mesure == "ITF")

79
00:00:59,424 --> 00:01:00,572
37. Enregistrer les modifications

80
00:01:00,575 --> 00:01:00,923
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

81
00:01:00,926 --> 00:01:00,930
1. calendar = Calendar.getInstance()

82
00:01:00,935 --> 00:01:00,942
5. currentDate = calendar.getTime()

83
00:01:00,945 --> 00:01:00,950
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

84
00:01:00,953 --> 00:01:00,957
13. formattedDate = sdf.format(currentDate)

85
00:01:00,960 --> 00:01:00,963
17. DateActuelle = formattedDate.toString()

86
00:01:00,966 --> 00:01:00,971
21. println(DateActuelle)

87
00:01:00,976 --> 00:01:01,412
27. Attendre que le bouton soit cliquable

88
00:01:01,418 --> 00:01:02,585
33. Cliquer sur le bouton Ajouter Une Decision 

89
00:01:02,588 --> 00:01:02,666
39. Confirmer l'Ajout de decision

90
00:01:02,669 --> 00:01:03,882
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

91
00:01:03,884 --> 00:01:05,007
49. Attendre que le bouton Confirmer Notification soit cliquable

92
00:01:05,011 --> 00:01:06,180
55. Confirmer Notification

93
00:01:06,184 --> 00:01:09,010
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

