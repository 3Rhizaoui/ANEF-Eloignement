1
00:00:00,003 --> 00:00:00,103
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,108 --> 00:00:00,110
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,113 --> 00:00:00,115
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,117 --> 00:00:00,119
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,120 --> 00:00:00,121
19. println("DriverName :" + DriverName)

6
00:00:00,124 --> 00:00:00,125
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,135 --> 00:00:00,137
27. if (Profiles == "Usager")

8
00:00:00,140 --> 00:00:00,141
31. if (Profiles == "Agent")

9
00:00:00,144 --> 00:00:00,144
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,147 --> 00:00:00,148
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,151 --> 00:00:04,445
1. openBrowser(URLPortailAgentPreProd)

12
00:00:04,448 --> 00:00:04,464
9. maximizeWindow()

13
00:00:04,466 --> 00:00:04,581
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:04,584 --> 00:00:04,601
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:04,604 --> 00:00:04,605
5. if (Profiles == "Usager")

16
00:00:04,607 --> 00:00:04,607
11. Identification : Portail Agent

17
00:00:04,609 --> 00:00:04,609
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:04,611 --> 00:00:04,611
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:04,613 --> 00:00:06,890
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:06,891 --> 00:00:09,149
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:09,151 --> 00:00:10,321
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:10,326 --> 00:00:15,343
15. delay(5)

23
00:00:15,346 --> 00:00:15,383
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:15,386 --> 00:00:15,549
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:15,551 --> 00:00:19,378
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:19,380 --> 00:00:19,409
9. Vérifier la position de la page d'accueil eloignement

27
00:00:19,411 --> 00:00:24,418
13. delay(5)

28
00:00:24,422 --> 00:00:25,635
19. Cliquer sur le bouton Recherche Globale

29
00:00:25,638 --> 00:00:25,639
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:25,641 --> 00:00:25,642
29. if (CreationOuRecherche == "Recherche")

31
00:00:25,647 --> 00:00:27,998
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:28,000 --> 00:00:29,178
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:29,181 --> 00:00:29,232
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:29,233 --> 00:00:30,446
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:30,449 --> 00:00:35,468
17. delay(5)

36
00:00:35,472 --> 00:00:35,522
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:35,524 --> 00:00:36,713
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:36,715 --> 00:00:38,197
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:38,198 --> 00:00:38,199
19. if (CreationOuRecherche == "Creation")

40
00:00:38,200 --> 00:00:38,201
23. println(NumeroEtranger)

41
00:00:38,202 --> 00:00:38,309
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:38,311 --> 00:00:39,815
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:39,819 --> 00:00:44,830
5. delay(5)

44
00:00:44,832 --> 00:00:44,834
9. switch (Mesure)

45
00:00:44,836 --> 00:00:46,019
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:46,022 --> 00:00:47,225
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:47,227 --> 00:00:47,907
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:47,912 --> 00:00:47,914
18. break

49
00:00:47,915 --> 00:00:48,125
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:48,126 --> 00:00:48,126
3. Generer la date du jour

51
00:00:48,128 --> 00:00:48,128
7. currentDate = calendar.getTime()

52
00:00:48,130 --> 00:00:48,130
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:48,132 --> 00:00:48,133
15. formattedDate = sdf.format(currentDate)

54
00:00:48,135 --> 00:00:48,136
19. DateActuelle = formattedDate.toString()

55
00:00:48,140 --> 00:00:48,142
23. println(DateActuelle)

56
00:00:48,145 --> 00:00:48,146
27. if (Mesure != "ITF")

57
00:00:48,150 --> 00:00:49,302
3. Remplir le champ Fondement Legal

58
00:00:49,304 --> 00:00:49,305
7. if (Mesure == "Expulsion")

59
00:00:49,307 --> 00:00:49,308
13. Generer un numero aleatoire

60
00:00:49,310 --> 00:00:49,311
17. println(NumberUsagerRandom)

61
00:00:49,313 --> 00:00:49,313
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:49,315 --> 00:00:49,315
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:49,317 --> 00:00:49,317
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:49,319 --> 00:00:49,320
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:49,322 --> 00:00:49,322
43. println(RandomNumber)

66
00:00:49,324 --> 00:00:49,324
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:49,326 --> 00:00:49,326
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:49,327 --> 00:00:49,328
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:49,330 --> 00:00:50,510
3. Ajouter un document 

70
00:00:50,513 --> 00:00:51,751
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:51,756 --> 00:00:51,760
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:51,763 --> 00:00:51,765
15. println(filePath)

73
00:00:51,768 --> 00:00:52,853
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:52,855 --> 00:00:54,040
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:54,043 --> 00:00:54,044
61. if (Mesure == "IAT")

76
00:00:54,046 --> 00:00:54,047
31. if (Mesure == "ITF")

77
00:00:54,049 --> 00:00:55,222
37. Enregistrer les modifications

78
00:00:55,225 --> 00:00:55,328
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:55,329 --> 00:00:55,330
1. calendar = Calendar.getInstance()

80
00:00:55,331 --> 00:00:55,332
5. currentDate = calendar.getTime()

81
00:00:55,334 --> 00:00:55,335
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:55,337 --> 00:00:55,339
13. formattedDate = sdf.format(currentDate)

83
00:00:55,341 --> 00:00:55,342
17. DateActuelle = formattedDate.toString()

84
00:00:55,344 --> 00:00:55,345
21. println(DateActuelle)

85
00:00:55,348 --> 00:00:55,392
27. Attendre que le bouton soit cliquable

86
00:00:55,395 --> 00:00:56,746
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:56,748 --> 00:00:56,838
39. Confirmer l'Ajout de decision

88
00:00:56,847 --> 00:00:58,159
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:58,163 --> 00:00:59,377
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:00:59,380 --> 00:01:00,604
55. Confirmer Notification

91
00:01:00,608 --> 00:01:01,893
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:01,896 --> 00:01:04,204
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:04,207 --> 00:01:04,208
67. if (ModeNotification == "Voie administrative")

94
00:01:04,211 --> 00:01:06,475
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:06,476 --> 00:01:07,565
73. Ajouter un fichier 

96
00:01:07,567 --> 00:01:07,636
79. Confirmer l'ajout de Notification

97
00:01:07,640 --> 00:01:08,834
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:08,837 --> 00:01:08,919
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

