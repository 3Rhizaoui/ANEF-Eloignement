1
00:00:00,003 --> 00:00:00,146
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,162 --> 00:00:00,163
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,164 --> 00:00:00,165
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,166 --> 00:00:00,168
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,169 --> 00:00:00,170
19. println("DriverName :" + DriverName)

6
00:00:00,172 --> 00:00:00,172
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,176 --> 00:00:00,177
27. if (Profiles == "Usager")

8
00:00:00,179 --> 00:00:00,179
31. if (Profiles == "Agent")

9
00:00:00,181 --> 00:00:00,182
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,183 --> 00:00:00,184
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,186 --> 00:00:05,093
1. openBrowser(URLPortailAgentPreProd)

12
00:00:05,096 --> 00:00:05,216
9. maximizeWindow()

13
00:00:05,218 --> 00:00:05,349
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:05,351 --> 00:00:05,355
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:05,358 --> 00:00:05,358
5. if (Profiles == "Usager")

16
00:00:05,361 --> 00:00:05,363
11. Identification : Portail Agent

17
00:00:05,366 --> 00:00:05,367
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:05,369 --> 00:00:05,370
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:05,372 --> 00:00:07,752
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:07,755 --> 00:00:10,047
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:10,050 --> 00:00:11,186
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:11,188 --> 00:00:16,211
15. delay(5)

23
00:00:16,216 --> 00:00:16,248
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:16,250 --> 00:00:16,362
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:16,364 --> 00:00:19,699
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:19,701 --> 00:00:19,739
9. Vérifier la position de la page d'accueil eloignement

27
00:00:19,742 --> 00:00:24,758
13. delay(5)

28
00:00:24,760 --> 00:00:25,954
19. Cliquer sur le bouton Recherche Globale

29
00:00:25,957 --> 00:00:25,958
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:25,964 --> 00:00:25,966
29. if (CreationOuRecherche == "Recherche")

31
00:00:25,970 --> 00:00:28,367
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:28,369 --> 00:00:29,536
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:29,540 --> 00:00:29,588
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:29,590 --> 00:00:30,793
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:30,795 --> 00:00:35,806
17. delay(5)

36
00:00:35,808 --> 00:00:35,852
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:35,854 --> 00:00:37,025
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:37,030 --> 00:00:38,481
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:38,484 --> 00:00:38,485
19. if (CreationOuRecherche == "Creation")

40
00:00:38,487 --> 00:00:38,488
23. println(NumeroEtranger)

41
00:00:38,491 --> 00:00:38,590
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:38,592 --> 00:00:40,383
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:40,385 --> 00:00:45,400
5. delay(5)

44
00:00:45,403 --> 00:00:45,406
9. switch (Mesure)

45
00:00:45,410 --> 00:00:46,579
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:46,582 --> 00:00:47,781
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:47,784 --> 00:00:48,701
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:48,705 --> 00:00:48,707
18. break

49
00:00:48,711 --> 00:00:48,905
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:48,908 --> 00:00:48,909
3. Generer la date du jour

51
00:00:48,912 --> 00:00:48,913
7. currentDate = calendar.getTime()

52
00:00:48,916 --> 00:00:48,917
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:48,920 --> 00:00:48,921
15. formattedDate = sdf.format(currentDate)

54
00:00:48,924 --> 00:00:48,927
19. DateActuelle = formattedDate.toString()

55
00:00:48,929 --> 00:00:48,930
23. println(DateActuelle)

56
00:00:48,932 --> 00:00:48,932
27. if (Mesure != "ITF")

57
00:00:48,934 --> 00:00:50,082
3. Remplir le champ Fondement Legal

58
00:00:50,084 --> 00:00:50,085
7. if (Mesure == "Expulsion")

59
00:00:50,087 --> 00:00:50,088
13. Generer un numero aleatoire

60
00:00:50,090 --> 00:00:50,091
17. println(NumberUsagerRandom)

61
00:00:50,094 --> 00:00:50,095
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:50,098 --> 00:00:50,098
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:50,100 --> 00:00:50,101
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:50,103 --> 00:00:50,105
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:50,107 --> 00:00:50,108
43. println(RandomNumber)

66
00:00:50,110 --> 00:00:50,110
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:50,112 --> 00:00:50,113
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:50,114 --> 00:00:50,115
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:50,116 --> 00:00:51,334
3. Ajouter un document 

70
00:00:51,336 --> 00:00:52,538
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:52,540 --> 00:00:52,543
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:52,547 --> 00:00:52,551
15. println(filePath)

73
00:00:52,555 --> 00:00:53,662
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:53,666 --> 00:00:54,862
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:54,864 --> 00:00:54,865
61. if (Mesure == "IAT")

76
00:00:54,870 --> 00:00:54,871
31. if (Mesure == "ITF")

77
00:00:54,874 --> 00:00:56,058
37. Enregistrer les modifications

78
00:00:56,061 --> 00:00:56,151
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:56,154 --> 00:00:56,156
1. calendar = Calendar.getInstance()

80
00:00:56,157 --> 00:00:56,158
5. currentDate = calendar.getTime()

81
00:00:56,161 --> 00:00:56,162
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:56,165 --> 00:00:56,166
13. formattedDate = sdf.format(currentDate)

83
00:00:56,169 --> 00:00:56,169
17. DateActuelle = formattedDate.toString()

84
00:00:56,172 --> 00:00:56,173
21. println(DateActuelle)

85
00:00:56,175 --> 00:00:56,230
27. Attendre que le bouton soit cliquable

86
00:00:56,233 --> 00:00:57,584
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:57,587 --> 00:00:57,672
39. Confirmer l'Ajout de decision

88
00:00:57,680 --> 00:00:58,934
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:58,936 --> 00:01:00,023
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:01:00,026 --> 00:01:01,223
55. Confirmer Notification

91
00:01:01,226 --> 00:01:02,571
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:02,574 --> 00:01:04,878
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:04,883 --> 00:01:04,886
67. if (ModeNotification == "Voie administrative")

94
00:01:04,892 --> 00:01:07,139
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:07,141 --> 00:01:08,230
73. Ajouter un fichier 

96
00:01:08,232 --> 00:01:08,280
79. Confirmer l'ajout de Notification

97
00:01:08,281 --> 00:01:09,470
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:09,472 --> 00:01:09,576
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

