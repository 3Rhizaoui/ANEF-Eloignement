1
00:00:00,003 --> 00:00:00,112
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,118 --> 00:00:00,118
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,120 --> 00:00:00,121
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,122 --> 00:00:00,123
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,126 --> 00:00:00,128
19. println("DriverName :" + DriverName)

6
00:00:00,131 --> 00:00:00,132
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,134 --> 00:00:00,136
27. if (Profiles == "Usager")

8
00:00:00,139 --> 00:00:00,140
31. if (Profiles == "Agent")

9
00:00:00,142 --> 00:00:00,143
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,145 --> 00:00:00,147
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,149 --> 00:00:04,116
1. openBrowser(URLPortailAgentPreProd)

12
00:00:04,118 --> 00:00:04,133
9. maximizeWindow()

13
00:00:04,135 --> 00:00:04,270
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:04,272 --> 00:00:04,275
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:04,277 --> 00:00:04,278
5. if (Profiles == "Usager")

16
00:00:04,280 --> 00:00:04,281
11. Identification : Portail Agent

17
00:00:04,284 --> 00:00:04,284
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:04,286 --> 00:00:04,287
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:04,288 --> 00:00:06,560
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:06,562 --> 00:00:08,811
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:08,813 --> 00:00:10,007
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:10,011 --> 00:00:15,024
15. delay(5)

23
00:00:15,027 --> 00:00:15,067
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:15,070 --> 00:00:15,165
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:15,167 --> 00:00:18,052
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:18,054 --> 00:00:18,082
9. Vérifier la position de la page d'accueil eloignement

27
00:00:18,085 --> 00:00:23,101
13. delay(5)

28
00:00:23,105 --> 00:00:24,317
19. Cliquer sur le bouton Recherche Globale

29
00:00:24,319 --> 00:00:24,320
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:24,322 --> 00:00:24,324
29. if (CreationOuRecherche == "Recherche")

31
00:00:24,328 --> 00:00:26,680
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:26,685 --> 00:00:27,874
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:27,877 --> 00:00:27,919
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:27,921 --> 00:00:29,098
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:29,100 --> 00:00:34,119
17. delay(5)

36
00:00:34,121 --> 00:00:34,162
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:34,164 --> 00:00:35,341
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:35,345 --> 00:00:36,815
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:36,818 --> 00:00:36,819
19. if (CreationOuRecherche == "Creation")

40
00:00:36,821 --> 00:00:36,822
23. println(NumeroEtranger)

41
00:00:36,824 --> 00:00:36,926
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:36,928 --> 00:00:38,596
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:38,598 --> 00:00:43,608
5. delay(5)

44
00:00:43,612 --> 00:00:43,614
9. switch (Mesure)

45
00:00:43,616 --> 00:00:44,780
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:44,782 --> 00:00:45,993
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:45,995 --> 00:00:46,814
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:46,817 --> 00:00:46,824
18. break

49
00:00:46,826 --> 00:00:47,000
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:47,002 --> 00:00:47,003
3. Generer la date du jour

51
00:00:47,005 --> 00:00:47,006
7. currentDate = calendar.getTime()

52
00:00:47,008 --> 00:00:47,009
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:47,013 --> 00:00:47,014
15. formattedDate = sdf.format(currentDate)

54
00:00:47,016 --> 00:00:47,017
19. DateActuelle = formattedDate.toString()

55
00:00:47,019 --> 00:00:47,020
23. println(DateActuelle)

56
00:00:47,022 --> 00:00:47,022
27. if (Mesure != "ITF")

57
00:00:47,025 --> 00:00:48,183
3. Remplir le champ Fondement Legal

58
00:00:48,187 --> 00:00:48,188
7. if (Mesure == "Expulsion")

59
00:00:48,192 --> 00:00:48,194
13. Generer un numero aleatoire

60
00:00:48,197 --> 00:00:48,198
17. println(NumberUsagerRandom)

61
00:00:48,201 --> 00:00:48,202
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:48,205 --> 00:00:48,206
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:48,209 --> 00:00:48,211
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:48,216 --> 00:00:48,218
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:48,222 --> 00:00:48,223
43. println(RandomNumber)

66
00:00:48,227 --> 00:00:48,228
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:48,232 --> 00:00:48,233
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:48,237 --> 00:00:48,239
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:48,243 --> 00:00:49,458
3. Ajouter un document 

70
00:00:49,460 --> 00:00:50,673
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:50,675 --> 00:00:50,676
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:50,679 --> 00:00:50,681
15. println(filePath)

73
00:00:50,684 --> 00:00:51,773
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:51,775 --> 00:00:52,946
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:52,955 --> 00:00:52,958
61. if (Mesure == "IAT")

76
00:00:52,961 --> 00:00:52,962
31. if (Mesure == "ITF")

77
00:00:52,965 --> 00:00:54,147
37. Enregistrer les modifications

78
00:00:54,151 --> 00:00:54,254
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:54,257 --> 00:00:54,257
1. calendar = Calendar.getInstance()

80
00:00:54,261 --> 00:00:54,262
5. currentDate = calendar.getTime()

81
00:00:54,265 --> 00:00:54,266
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:54,268 --> 00:00:54,269
13. formattedDate = sdf.format(currentDate)

83
00:00:54,273 --> 00:00:54,274
17. DateActuelle = formattedDate.toString()

84
00:00:54,277 --> 00:00:54,278
21. println(DateActuelle)

85
00:00:54,281 --> 00:00:54,478
27. Attendre que le bouton soit cliquable

86
00:00:54,482 --> 00:00:55,666
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:55,669 --> 00:00:55,758
39. Confirmer l'Ajout de decision

88
00:00:55,764 --> 00:00:57,057
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:00:57,061 --> 00:00:58,258
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:00:58,263 --> 00:00:59,479
55. Confirmer Notification

91
00:00:59,482 --> 00:01:00,781
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:00,784 --> 00:01:03,062
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:03,065 --> 00:01:03,065
67. if (ModeNotification == "Voie administrative")

94
00:01:03,069 --> 00:01:05,325
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:05,328 --> 00:01:06,409
73. Ajouter un fichier 

96
00:01:06,412 --> 00:01:06,455
79. Confirmer l'ajout de Notification

97
00:01:06,459 --> 00:01:07,659
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:07,662 --> 00:01:07,784
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

