1
00:00:00,003 --> 00:00:00,116
3. Appel Brique Réutilisable pour lancer URl ANEF pour Agent

2
00:00:00,122 --> 00:00:00,123
5. RunConfiguration: getProjectDir for LogDriver 

3
00:00:00,127 --> 00:00:00,128
11. RunConfiguration: getExecutionProperties Driver 

4
00:00:00,130 --> 00:00:00,130
15. DriverName = get("WebUI").get("browserType")

5
00:00:00,131 --> 00:00:00,132
19. println("DriverName :" + DriverName)

6
00:00:00,134 --> 00:00:00,135
23. println("Driverpath :" + RunBrowserConfiguration.get("drivers"))

7
00:00:00,136 --> 00:00:00,137
27. if (Profiles == "Usager")

8
00:00:00,138 --> 00:00:00,139
31. if (Profiles == "Agent")

9
00:00:00,140 --> 00:00:00,141
1. if (EnvExec == "URLPortailAgentQualif")

10
00:00:00,143 --> 00:00:00,144
5. if (EnvExec == "URLPortailAgentPreProd")

11
00:00:00,146 --> 00:00:06,416
1. openBrowser(URLPortailAgentPreProd)

12
00:00:06,418 --> 00:00:06,461
9. maximizeWindow()

13
00:00:06,465 --> 00:00:06,665
9. Appel Brique Réutilisable pour Identification Agent

14
00:00:06,680 --> 00:00:06,687
1. com.kazurayam.ksbackyard.HighlightElement.pandemic()

15
00:00:06,693 --> 00:00:06,695
5. if (Profiles == "Usager")

16
00:00:06,698 --> 00:00:06,699
11. Identification : Portail Agent

17
00:00:06,707 --> 00:00:06,713
1. if (EnvExec == "URLPortailAgentQualif")

18
00:00:06,716 --> 00:00:06,718
5. if (EnvExec == "URLPortailAgentPreProd")

19
00:00:06,722 --> 00:00:09,324
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_UserNameAgent"), IdentifiantAgent)

20
00:00:09,328 --> 00:00:11,606
5. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/Input_PasswordAgent"), PwAgent)

21
00:00:11,607 --> 00:00:12,747
9. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_ANEF_Connexion/btn_Valider_Conx_Agent"))

22
00:00:12,749 --> 00:00:17,756
15. delay(5)

23
00:00:17,758 --> 00:00:17,788
19. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Accueil_Principale/btn_ANEF_Eloignement"), 1, STOP_ON_FAILURE)

24
00:00:17,789 --> 00:00:17,866
15. Appel Brique Réutilisable pour Creation ou Recherche de dossier avec un numero etranger 

25
00:00:17,868 --> 00:00:21,218
3. Accèder à la page d'accueil  ANEF eloignement

26
00:00:21,221 --> 00:00:21,247
9. Vérifier la position de la page d'accueil eloignement

27
00:00:21,248 --> 00:00:26,264
13. delay(5)

28
00:00:26,265 --> 00:00:27,445
19. Cliquer sur le bouton Recherche Globale

29
00:00:27,447 --> 00:00:27,448
25. Choisir la methode de Creation d'un nouveau dossier pour un numero etranger inexistant

30
00:00:27,451 --> 00:00:27,452
29. if (CreationOuRecherche == "Recherche")

31
00:00:27,454 --> 00:00:29,761
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), NumeroEtranger, STOP_ON_FAILURE)

32
00:00:29,763 --> 00:00:30,911
5. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/Input_Numero_etranger"), STOP_ON_FAILURE)

33
00:00:30,915 --> 00:00:30,953
9. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), 5, STOP_ON_FAILURE)

34
00:00:30,957 --> 00:00:32,110
13. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Lancer_La_Recherche"), STOP_ON_FAILURE)

35
00:00:32,112 --> 00:00:37,125
17. delay(5)

36
00:00:37,127 --> 00:00:37,164
21. scrollToElement(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), 5, STOP_ON_FAILURE)

37
00:00:37,166 --> 00:00:38,324
25. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Radio_Selectionner_Dossier"), STOP_ON_FAILURE)

38
00:00:38,325 --> 00:00:39,786
29. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Creation_ou_Recherche_Dossier/btn_Choisir_Dossier_Etranger"), STOP_ON_FAILURE)

39
00:00:39,788 --> 00:00:39,789
19. if (CreationOuRecherche == "Creation")

40
00:00:39,791 --> 00:00:39,792
23. println(NumeroEtranger)

41
00:00:39,794 --> 00:00:39,890
29. Appel Brique Réutilisable pour Prendre une Mesure selon les Choix : OQTF , Expulsion ,IAT ,ITF ,ExecutionFicheSIS, RemiseSchengen, TransfertDublin

42
00:00:39,892 --> 00:00:41,592
1. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Prendre_Mesure"), STOP_ON_FAILURE)

43
00:00:41,594 --> 00:00:46,600
5. delay(5)

44
00:00:46,602 --> 00:00:46,604
9. switch (Mesure)

45
00:00:46,606 --> 00:00:47,784
4.  Prendre Une Mesure ExecutionFicheSIS  

46
00:00:47,786 --> 00:00:48,956
10. Cliquer sur le bourron Confirmer Mesure

47
00:00:48,958 --> 00:00:49,762
14. verifyElementPresent(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure/btn_Supprimer_Fiche_Mesure"), 2, STOP_ON_FAILURE)

48
00:00:49,764 --> 00:00:49,771
18. break

49
00:00:49,774 --> 00:00:49,902
13. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Prendre_Mesure_Formulaire"), ["Mesure":Mesure, "FondementLegal":FondementLegal, "NatureDeLacteExpulsion":NatureDeLacteExpulsion, "UrgenceAbsolueExpulsion":UrgenceAbsolueExpulsion, ... ], STOP_ON_FAILURE)

50
00:00:50,017 --> 00:00:50,018
3. Generer la date du jour

51
00:00:50,021 --> 00:00:50,038
7. currentDate = calendar.getTime()

52
00:00:50,041 --> 00:00:50,046
11. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

53
00:00:50,049 --> 00:00:50,107
15. formattedDate = sdf.format(currentDate)

54
00:00:50,126 --> 00:00:50,128
19. DateActuelle = formattedDate.toString()

55
00:00:50,133 --> 00:00:50,138
23. println(DateActuelle)

56
00:00:50,167 --> 00:00:50,168
27. if (Mesure != "ITF")

57
00:00:50,192 --> 00:00:51,656
3. Remplir le champ Fondement Legal

58
00:00:51,660 --> 00:00:51,661
7. if (Mesure == "Expulsion")

59
00:00:51,663 --> 00:00:51,666
13. Generer un numero aleatoire

60
00:00:51,670 --> 00:00:51,671
17. println(NumberUsagerRandom)

61
00:00:51,673 --> 00:00:51,674
21. RandomNumber = NumberUsagerRandom.toString()

62
00:00:51,677 --> 00:00:51,677
27. Renseigner les champs de l'accordeon Fondement Legal pour un OQTF 

63
00:00:51,679 --> 00:00:51,680
33. Renseigner les champs de l'accordeon Fondement Legal pour une Remise Schengen 

64
00:00:51,682 --> 00:00:51,683
39. generer un nombre aleatoire entre '1' et '30'

65
00:00:51,685 --> 00:00:51,686
43. println(RandomNumber)

66
00:00:51,688 --> 00:00:51,689
47. RandomNumberSelect = RandomNumber.toString()

67
00:00:51,692 --> 00:00:51,693
53. Renseigner les champs de l'accordeon Fondement Legal pour un Transfert Dublin 

68
00:00:51,696 --> 00:00:51,697
57. if (Mesure == "ExecutionFicheSIS")

69
00:00:51,699 --> 00:00:52,948
3. Ajouter un document 

70
00:00:52,950 --> 00:00:54,175
7. selectOptionByIndex(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/select_Type_Document"), "1", STOP_ON_FAILURE)

71
00:00:54,178 --> 00:00:54,179
11. filePath = getProjectDir() + "/Data Files/Fichier_Test.pdf"

72
00:00:54,182 --> 00:00:54,184
15. println(filePath)

73
00:00:54,187 --> 00:00:55,299
19. uploadFile(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/input_Fichier_Fiche_Schengen"), filePath)

74
00:00:55,302 --> 00:00:56,511
23. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Prendre_Mesure_Formulaire/btn_Enregistrer"), STOP_ON_FAILURE)

75
00:00:56,515 --> 00:00:56,516
61. if (Mesure == "IAT")

76
00:00:56,524 --> 00:00:56,526
31. if (Mesure == "ITF")

77
00:00:56,529 --> 00:00:57,740
37. Enregistrer les modifications

78
00:00:57,747 --> 00:00:57,844
33. callTestCase(findTestCase("Test Cases/Test Reutilisable/Main/ANEF_Eloignement_V_Nawres/ANEF_Ajouter_Decision"), ["ModeNotification":ModeNotification], STOP_ON_FAILURE)

79
00:00:57,847 --> 00:00:57,849
1. calendar = Calendar.getInstance()

80
00:00:57,854 --> 00:00:57,859
5. currentDate = calendar.getTime()

81
00:00:57,864 --> 00:00:57,865
9. sdf = new java.text.SimpleDateFormat(dd/MM/yyyy)

82
00:00:57,868 --> 00:00:57,869
13. formattedDate = sdf.format(currentDate)

83
00:00:57,872 --> 00:00:57,873
17. DateActuelle = formattedDate.toString()

84
00:00:57,876 --> 00:00:57,878
21. println(DateActuelle)

85
00:00:57,880 --> 00:00:58,317
27. Attendre que le bouton soit cliquable

86
00:00:58,319 --> 00:00:59,927
33. Cliquer sur le bouton Ajouter Une Decision 

87
00:00:59,931 --> 00:01:00,038
39. Confirmer l'Ajout de decision

88
00:01:00,049 --> 00:01:01,361
43. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Decision"), STOP_ON_FAILURE)

89
00:01:01,365 --> 00:01:02,503
49. Attendre que le bouton Confirmer Notification soit cliquable

90
00:01:02,507 --> 00:01:03,695
55. Confirmer Notification

91
00:01:03,698 --> 00:01:04,892
59. selectOptionByLabel(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/select_Mode_Notification"), ModeNotification, false, STOP_ON_FAILURE)

92
00:01:04,895 --> 00:01:07,146
63. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Date_Notification"), DateActuelle, STOP_ON_FAILURE)

93
00:01:07,148 --> 00:01:07,149
67. if (ModeNotification == "Voie administrative")

94
00:01:07,152 --> 00:01:09,352
1. setText(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/input_Heure_Notification"), "14:30", STOP_ON_FAILURE)

95
00:01:09,355 --> 00:01:10,443
73. Ajouter un fichier 

96
00:01:10,445 --> 00:01:10,528
79. Confirmer l'ajout de Notification

97
00:01:10,530 --> 00:01:11,753
83. click(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Confirmer_Ajout_Notification"), STOP_ON_FAILURE)

98
00:01:11,756 --> 00:01:11,827
87. waitForElementClickable(findTestObject("Object Repository/ANEF_Eloignement_V_Nawres/Page_Ajouter_Decision/btn_Enregistrer"), 7, STOP_ON_FAILURE)

